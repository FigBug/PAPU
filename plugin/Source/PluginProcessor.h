/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic framework code for a JUCE plugin processor.

  ==============================================================================
*/

#ifndef PLUGINPROCESSOR_H_INCLUDED
#define PLUGINPROCESSOR_H_INCLUDED

#include "../JuceLibraryCode/JuceHeader.h"
#include "gb_apu/Gb_Apu.h"
#include "slCommon.h"

//==============================================================================
/**
*/
class PAPUAudioProcessorEditor;
class PAPUAudioProcessor : public slProcessor
{
public:
    //==============================================================================
    PAPUAudioProcessor();
    ~PAPUAudioProcessor();

    //==============================================================================
    void prepareToPlay (double sampleRate, int samplesPerBlock) override;
    void releaseResources() override;

    void processBlock (AudioSampleBuffer&, MidiBuffer&) override;

    //==============================================================================
    AudioProcessorEditor* createEditor() override;
    bool hasEditor() const override;

    //==============================================================================
    
    static const char* paramPulse1Level;
    static const char* paramPulse2Level;
    static const char* paramPulse3Level;
    static const char* paramNoiseLevel;
    static const char* paramNoiseWhite;
    static const char* paramNoiseShift;

private:
    void runUntil (int& done, AudioSampleBuffer& buffer, int pos);
    
    int lastNote = -1;
    int velocity = 0;
    Array<int> noteQueue;
    
    LinearSmoothedValue<float> outputSmoothed;
    Component::SafePointer<PAPUAudioProcessorEditor> editor;
    
    Gb_Apu apu;
    const long clocks_per_sec = 3579545;
    
    struct ChannelInfo
    {
        int note = -1;
        int velocity = 0;
        bool dirty = false;
    };
    
    ChannelInfo channelInfo[3];
    
    //==============================================================================
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (PAPUAudioProcessor)
};


#endif  // PLUGINPROCESSOR_H_INCLUDED
